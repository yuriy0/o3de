/*
* All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
* its licensors.
*
* For complete copyright and license terms please see the LICENSE at the root of this
* distribution (the "License"). All use of this software is governed by the License,
* or, if provided, by the license below or the license accompanying this file. Do not
* remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*
*/

#pragma once

#include <Atom/Features/SrgSemantics.azsli>

ShaderResourceGroup PassSrg : SRG_PerPass
{
    // [GFX TODO][ATOM-2012] adapt to multiple shadowmaps
    Texture2DArray<float> m_directionalLightShadowmap;
    Texture2DArray<float> m_directionalLightExponentialShadowmap;
    Texture2DArray<float> m_projectedShadowmaps;
    Texture2DArray<float> m_projectedExponentialShadowmap;
    Texture2D m_brdfMap;

    Sampler LinearSampler
    {
        MinFilter = Linear;
        MagFilter = Linear;
        MipFilter = Linear;
        AddressU = Clamp;
        AddressV = Clamp;
        AddressW = Clamp;
    };
    
    Sampler PointSampler
    {
        MinFilter = Point;
        MagFilter = Point;
        MipFilter = Point;
        AddressU = Clamp;
        AddressV = Clamp;
        AddressW = Clamp;
    };

    Texture2D<uint4> m_tileLightData;
    StructuredBuffer<uint> m_lightListRemapped;
    Texture2D<float> m_linearDepthTexture;

	// APC BEGIN

    // Copy of opaque objects RT from forward pass
	Texture2D m_opaqueOutput;

    // Depth and min depth
    Texture2D<float2> m_depth;
    Texture2D<float2> m_depthMin;

    // OIT: moments and total optical depth
    Texture2D<float4> m_oitMoments;
    Texture2D<float> m_oitOpticalDepth;

	// APC END
}