
/*
* All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
* its licensors.
*
* For complete copyright and license terms please see the LICENSE at the root of this
* distribution (the "License"). All use of this software is governed by the License,
* or, if provided, by the license below or the license accompanying this file. Do not
* remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*
*/

#include "CommonVS.azsli"
#include <Atom/RPI/ShaderResourceGroups/DefaultDrawSrg.azsli>

enum class Axis
{
    Tangent,
    Bitangent,
    Normal,
    UV
};

option Axis o_axis;

struct PixelOutput
{
    float4 m_color : SV_Target0;
};

PixelOutput MainPS(VertexOutput input)
{
    PixelOutput output;

    if (o_axis == Axis::Tangent)
    {
        output.m_color = float4(input.m_tangent * 0.5 + 0.5, 1);
    }
    else if (o_axis == Axis::Bitangent)
    {
        output.m_color = float4(input.m_bitangent * 0.5 + 0.5, 1);
    }
    else if (o_axis == Axis::Normal)
    {
        output.m_color = float4(input.m_normal * 0.5 + 0.5, 1);
    }
    else if (o_axis == Axis::UV)
    {
        output.m_color.rg = input.m_uv;
        output.m_color.b = 0;
        output.m_color.a = 1;
    }
    else
    {
        output.m_color = 0;
    }

    return output;
}